{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","style","color","mode","class","href","type","Navbar","to","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutTitle","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","heading","backgroundColor","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","getSelection","removeAllRanges","navigator","clipboard","writeText","filter","element","Alert","alert","word","lower","charAt","slice","capitalize","msg","prototype","PropTypes","string","isRequired","defaultProps","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.baac7d10.chunk.js","sourcesContent":["import React from 'react'\n// import { useState } from 'react'\n\nexport default function About(props) {\n    // const [myStyle, setMyStyle] = useState({\n    //     color: 'black',\n    //     backgroundColor: 'white'\n    // });\n\n    // const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n\n    // const toggleStyle = () => {\n    //     if (myStyle.color === 'black') {\n    //         setMyStyle({\n    //             color: 'white',\n    //             backgroundColor: 'black'\n    //         })\n    //         setBtnText(\"Enable Light Mode\");\n    //     }\n\n    //     else {\n    //         setMyStyle({\n    //             color: 'black',\n    //             backgroundColor: 'white'\n    //         })\n    //         setBtnText(\"Enable Dark Mode\");\n    //     }\n    // }\n\n    return (\n        <>\n            <div className=\"container\" style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\n                <h1 className=\"my-3 bd-title\">About Us</h1>\n                <p className=\"lead \">\n                    Learn more about the <strong>TextStar</strong>, who created this, what's its features are and what techs are included.\n                </p>\n                <div>\n                    <h2>Introduction</h2>\n                    <p className=\"lead \">\n                        Basically, <strong>TextStar</strong> is a word counter and a character counting utility which can be used to manipulate your text in the way you want. You can remove extra spaces, copy the manipulated text as well as convert your text from uppercase to lowercase and lowercase to uppercase. And provided Minute Count time to read the text. Here is one more feature to preview all the text that user entered.\n                    </p>\n                </div>\n                <div>\n                    <h2>Tech Included</h2>\n                    <p className=\"lead \">\n                        <ul>\n                            <li>HTML</li>\n                            <li>CSS</li>\n                            <li>JavaScript</li>\n                            <li>React</li>\n                            <li>Bootstrap</li>\n                            <li>React Router</li>\n                        </ul>\n                    </p>\n                </div>\n                <div>\n                    <h2>Creator</h2>\n                    <p className=\"lead\">\n                        Hey there, I'm <strong>Atul Tripathi</strong> from India.\n                        My passion for software lies with dreaming up ideas and making them come true with elegant interfaces. I take great care in the experience, architecture, and code quality of the things I build.\n                        <br />\n                        I am also an <strong>open-source</strong> enthusiast and maintainer. I learned a lot from the open-source community and I love how <strong>collaboration and knowledge sharing</strong> happened through open-source.\n                    </p>\n                </div>\n                <br />\n                <div>\n                    <h2>Some Lines from Creator</h2>\n                    <ul>\n                        <li>\n                            <figure>\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"lead\">\n                                        A person can ruin or succeed you, but it all depends on you what you wants to be. So always choose your best, because that's your life and you have to be perfect for yourself.\n                                    </p>\n                                </blockquote>\n                                <figcaption className=\"blockquote-footer text-end\">\n                                    Atul Tripathi\n                                </figcaption>\n                            </figure>\n                        </li>\n                        <li>\n                            <figure>\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"lead\">\n                                        If you find a person who actually cares you, don't leave him/her because he/she is the one who really wants to give you the real happiness.\n                                    </p>\n                                </blockquote>\n                                <figcaption className=\"blockquote-footer text-end\">\n                                    Atul Tripathi\n                                </figcaption>\n                            </figure>\n                        </li>\n                        <li>\n                            <figure>\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"lead\">\n                                        Always remember that, the right time never comes because right time in present to do something for yourself is now. So, use it and do your best to achieve your goals.\n                                    </p>\n                                </blockquote>\n                                <figcaption className=\"blockquote-footer text-end\">\n                                    Atul Tripathi\n                                </figcaption>\n                            </figure>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <h2>Last but not Least!</h2>\n                    <p className=\"lead\">\n                        How to reach me -\n                        <ul class=\"list-inline my-3\">\n                            <li class=\"list-inline-item\">\n                                <a href=\"https://twitter.com/atultrp_\">\n                                    <button type=\"button\" class=\"btn btn-dark\">Twitter</button>\n                                </a>\n                            </li>\n                            <li class=\"list-inline-item\">\n                                <a href=\"https://github.com/atultrp\">\n                                    <button type=\"button\" class=\"btn btn-dark\">GitHub</button>\n                                </a>\n                            </li>\n                            <li class=\"list-inline-item\">\n                                <a href=\"https://instagram.com/atultrp\">\n                                    <button type=\"button\" class=\"btn btn-dark\">Instagram</button>\n                                </a>\n                            </li>\n                            <li class=\"list-inline-item\">\n                                <a href=\"https://www.linkedin.com/in/atultrp-\">\n                                    <button type=\"button\" class=\"btn btn-dark\">LinkedIn</button>\n                                </a>\n                            </li>\n                            <li class=\"list-inline-item\">\n                                <a href=\"mailto: atul31815@gmail.com\">\n                                    <button type=\"button\" class=\"btn btn-dark\">Send Email</button>\n                                </a>\n                            </li>\n                        </ul>\n                        Created by using coding skills with love 💙️ by - <a href=\"https://github.com/atultrp\">\n                        <button type=\"button\" class=\"btn btn-light\">Atul Tripathi</button>\n                        </a>\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n// import { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n\n\nexport default function Navbar(props) {\n\n    // const toggleBlue = ()=>{\n    //     if(props.toggleMode === 'dark'){\n    //         document.body.style.backgroundColor = \"#323a40\";\n    //     }\n    // }\n\n    return (\n        <div>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n                <div className=\"container-fluid\">\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutTitle}</Link>\n                            </li>\n                        </ul>\n                        {/* <form className=\"d-flex\">\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                            <button className=\"btn btn-outline-light\" type=\"submit\">Search</button>\n                        </form> */}\n\n                        {/* Code updating below this line */}\n\n                        {/* <div className={`form-check text-${props.mode === 'light' ? 'dark' : 'light'}`}> */}\n                            {/* <input class=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"checkboxNoLabel\" value=\"1\" aria-label=\"...\"/> */}\n                            {/* <button type=\"button\" onClick={props.toggleMode} onChange={toggleBlue} value=\"1\" class=\"btn btn-primary\"></button>\n                        </div> */}\n\n                        \n                        {/* Code updating above this line */}\n\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nNavbar.prototype = {\n    title: PropTypes.string.isRequired,\n    aboutTitle: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutTitle: 'About text here'\n}","import React, {useState} from 'react';\n\nexport default function TextForm(props) {\n    const handleUpClick = () => {\n        // console.log(\"Button is clicked!\");\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Coverted to UpperCase!\",\"success\");\n    }\n\n    const handleLowClick = () => {\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Coverted to LowerCase!\",\"success\");\n    }\n\n    const handleRemoveSpace = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra Spaces removed!\",\"success\");\n    }\n\n    const handleCopy = () => {\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        document.getSelection().removeAllRanges();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Text copied!\",\"success\");\n    }\n\n    const handleClearClick = () => {\n        let newText = \"\";\n        setText(newText);\n        props.showAlert(\"Text Cleared!\",\"success\");\n    }\n\n    const handleOnChange = (event) => {\n        // console.log(\"On change\");\n        setText(event.target.value);\n    }\n\n    const [text, setText] = useState(\"\");\n\n    return (\n        <>\n        <div className=\"container\" style={{color : props.mode==='light'?'black':'white'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" id=\"myBox\" style={{backgroundColor : props.mode==='light'?'white':'#212529', color : props.mode==='light'?'black':'white'}} rows=\"8\" value={text} onChange={handleOnChange}></textarea>\n            </div>\n            <button disabled={text.length === 0} className=\"btn btn-info mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length === 0} className=\"btn btn-info mx-1 my-1\" onClick={handleLowClick}>Convert to Lowercase</button>\n            <button disabled={text.length === 0} className=\"btn btn-info mx-1 my-1\" onClick={handleRemoveSpace}>Remove Extra Space</button>\n            <button disabled={text.length === 0} className=\"btn btn-success mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length === 0} className=\"btn btn-danger mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n        </div>\n        <div className=\"container my-3\" style={{color : props.mode==='light'?'black':'white'}}>\n            <h2>Your text summary!</h2>\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to Preview!\"}</p>\n        </div>\n        </>\n    ) \n}","import React from 'react'\n\nexport default function Alert(props) {\n\n    const capitalize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n\n    return (\n            props.alert && <div>\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                    <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\n                </div>\n            </div>\n    )\n}\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#343a40\";\n      showAlert(\"Dark Mode has been Enabled.\", \"success\");\n    }\n\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enabled.\", \"success\")\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextStar\" aboutTitle=\"About TextStar\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}